set show advisories off .

load apmaude

fmod CASSANDRA-PARAMETERS is
  pr NAT .
  op replicaFactor : -> Nat .
endfm

fmod CASSANDRA-SORTS is
  inc CASSANDRA-PARAMETERS .
  inc ACTOR-MODEL .

  sorts AddressSet AddressList ReplicaTable ConsistLevel
        Version KeyVersion KeyValue Record ConfigList Operation 
        Response KeyValueVersion ReqConsLv Key Value
        LocalVar .
  subsort Config < ConfigList .
  subsort Float < Version .
  subsort Address < AddressList .
  subsort Address < AddressSet .
  subsort Nat < ConsistLevel .
  subsort Nat < Value .

  op emptyAddrList : -> AddressList [ctor] .
  op _;;_ : AddressList AddressList -> AddressList [ctor assoc id: emptyAddrList] .

  op emptyAddrSet : -> AddressSet [ctor] .
  op _;_ : AddressSet AddressSet -> AddressSet [ctor assoc comm id: emptyAddrSet] .

  op zero   : -> ConsistLevel .
  op any    : -> ConsistLevel .
  op one    : -> ConsistLevel .
  op two    : -> ConsistLevel .
  op three  : -> ConsistLevel . 
  op quorum : -> ConsistLevel .	
  op all    : -> ConsistLevel .

  *** parameter
  op readLevel : -> ConsistLevel .
  op writeLevel : -> ConsistLevel .

  eq zero   = 0 .
  eq one    = 1 .
  eq two    = 2 .
  eq three  = 3 .
  eq quorum = (replicaFactor quo 2) + 1 .
  eq all    = replicaFactor .

  op eptVersion : -> Version .

  op <_,_> : Key Version   -> KeyVersion [ctor] .
  op <_,_> : Key Value -> KeyValue [ctor] .
  op [_,_,_] : Key Value Version   -> KeyValueVersion [ctor] .

  op emptyTxnList : -> ConfigList [ctor] .
  op _;;_ : ConfigList ConfigList -> ConfigList [ctor assoc id: emptyTxnList] .

  op write : Key Value -> Operation [ctor] .
  op read : Key -> Operation [ctor] .

  op response : Address KeyValueVersion -> Response .
  op response : Address Bool -> Response .

  op [_,_] : Address ConsistLevel -> ReqConsLv .
  op emptyReqConsLv : -> ReqConsLv [ctor] .
  op _;_ : ReqConsLv ReqConsLv -> ReqConsLv [ctor assoc comm id: emptyReqConsLv] .

endfm 
view KeyVersion from TRIV to CASSANDRA-SORTS is sort Elt to KeyVersion . endv
view KeyValue from TRIV to CASSANDRA-SORTS is sort Elt to KeyValue . endv
view Record from TRIV to CASSANDRA-SORTS is sort Elt to Record . endv
view Operation from TRIV to CASSANDRA-SORTS is sort Elt to Operation . endv
view Response from TRIV to CASSANDRA-SORTS is sort Elt to Response . endv
view KeyValueVersion from TRIV to CASSANDRA-SORTS is sort Elt to KeyValueVersion . endv
view Key      from TRIV to CASSANDRA-SORTS is sort Elt to Key .      endv
view Value    from TRIV to CASSANDRA-SORTS is sort Elt to Value .    endv
view Content from TRIV to ACTOR-MODEL is sort Elt to Content . endv 
view LocalVar from TRIV to CASSANDRA-SORTS is sort Elt to LocalVar . endv 

fmod VECTOR-TIME is
  pr MAP{Address,Float} * (sort Map{Address,Float} to VectorTime) .
endfm


fmod CASSANDRA-IFACE is
  pr MAP{LocalVar,Value} * (sort Map{LocalVar,Value} to LocalVars) .
  pr SET{KeyVersion} .
  pr SET{KeyValue} .
  pr SET{Response} * (sort Set{Response} to ResponseSet) .

  pr SET{Key} * (sort Set{Key} to KeySet) .
  pr MAP{Key,Value} * (sort Map{Key,Value} to WriteSet, op undefined to undefinedWriteSet) .

  var K : Key . var V : Value . var VERSION : Version . var WS : Set{KeyValue} .

  op kver : Set{KeyValue} Version -> Set{KeyVersion} . 
  eq kver((< K,V >,WS),VERSION) = < K,VERSION >, kver(WS,VERSION) .
  eq kver(empty,VERSION) = empty .
endfm
view ResponseSet from TRIV to CASSANDRA-IFACE is sort Elt to ResponseSet .       endv


fmod CASSANDRA-SERVER-CLIENT is
  pr CASSANDRA-SORTS .
  pr LIST{Operation} * (sort List{Operation} to OperationList) .
  pr MAP{Address,Record} * (sort Map{Address,Record} to Log,
                            sort Entry{Address,Record} to LogEntry) .
  pr VECTOR-TIME .
  pr MAP{Address,ResponseSet} * (sort Map{Address,ResponseSet} to Responses) .
  pr SET{KeyValueVersion} .

  *** MSGS:
  op request : Address Operation ConsistLevel -> Content .  --- read
  op request : Address Operation Version ConsistLevel -> Content .  --- write
  op readRequest : Address Key -> Content .
  op readResponse : Address KeyValueVersion -> Content .
  op writeRequest : Address KeyValueVersion -> Content . 
  op writeResponse : Address Bool -> Content .
  op readRepair : KeyValueVersion -> Content .

  op done : Address Bool -> Msg .
  op done : Address KeyValueVersion -> Msg .
  op start : -> Content .
  op error : Address KeyValueVersion -> Msg .

  *** Servers:
  op Server         :                      -> ActorType .                     
  op respFromRepl:_ : Responses            -> Attribute .
  op reqConsLv:_    : ReqConsLv            -> Attribute .
  op datastore:_    : Set{KeyValueVersion} -> Attribute .

  *** Clients:
  op Client : -> ActorType .
  op requestQueue:_ : ConfigList -> Attribute .
  op executing:_ : Config -> Attribute .
  op committed:_ : Config -> Attribute .
  op coord:_ : Address -> Attribute .
  op aborted:_ : Config -> Attribute .

  *** Txns:
  op Txn : -> ActorType .
  op operations:_ : OperationList -> Attribute .
  op readSet:_ : Set{KeyVersion} -> Attribute .
  op writeSet:_ : Set{KeyValue} -> Attribute .
  op version:_ : Version -> Attribute .
  op consLv:_ : ConsistLevel -> Attribute .

  *** Replica Table:
  op Table : -> ActorType .
  op table:_ : ReplicaTable -> Attribute .

  *** Monitor:
  op Monitor : -> ActorType .
  op log:_ : Log -> Attribute .

  op <_;_;_;_;_> : VectorTime VectorTime Bool Set{KeyVersion} Set{KeyVersion} -> Record [ctor] .
endfm