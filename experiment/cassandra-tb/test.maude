load initial-states
load delta

  *** parameters:
  *** consistency level

mod CASSANDRA-ANALYSIS is
  inc INITIAL-STATES .
  inc COMMONALITY .
  inc RYW .

  eq LIMIT = 1.0e+1000000 .

  eq replicaFactor = 3 .


  op initConfig : -> Config .
  eq initConfig = run(initState,LIMIT) .

---
  eq initState = init(20,20,0,10,10,3,3,1,1,0,uniform,one,one) . 


  --- Init parameters 
  eq nbOfRoTxns = 5 .  
  eq nbOfWoTxns = 5 .  
  eq nbOfRwTxns = 0 .       --- must be 0
  eq nbOfOpsPerRoTxn = 1 .  --- must be 1
  eq nbOfOpsPerWoTxn = 1 .  --- must be 1
  eq nbOfOpsPerRwTxn = 0 .  --- must be 0
  eq nbOfCls = 4 .
  eq nbOfServs  = 4 .  
  eq nbOfKeys = 4 .  
  eq nbOfRepls = 3 .
  eq kad = zipf .
  eq readLevel = all .
  eq writeLevel = one .

  eq delay = sampleLogNormal(0.0,1.0) .
  ---eq delay = genRandom(0.0, 1.0) .


  --- Metrics
  var LOG : Log .
  vars TID RID M : Address .
  vars GT GT' T N : Float .
  vars RS WS : Set{KeyVersion} .
  vars VT VT' : VectorTime .
  var FLAG : Bool .
  var C : Config .

  op totalRunTime : Log -> Float .
  op trt : Log Float -> Float .


  eq totalRunTime(LOG) = trt(LOG,0.0) .
  ---(
  eq trt((TID |-> 
      < RID |-> GT ; (RID |-> GT',VT) ; true ; RS ; WS >,LOG),T) = 
       if GT' > T
         then trt(LOG,GT')
         else trt(LOG,T)
       fi .
  eq trt((TID |-> 
      < VT ; VT' ; false ; RS ; WS >,LOG),T) = 
       trt(LOG,T) .
  eq trt(empty,T) = T .
  )
  *** NEW: false reads count
  eq trt((TID |->
      < RID |-> GT ; (RID |-> GT',VT) ; FLAG ; RS ; WS >,LOG),T) =
       if GT' > T
         then trt(LOG,GT')
         else trt(LOG,T)
       fi .
  eq trt(empty,T) = T .


  --- Throughput
  op throughput : Log -> Float .
  ---
  eq throughput(LOG) = committedNumber(LOG) 
                     / totalRunTime(LOG) .
  
  ---(
  *** NEW
  eq throughput(LOG) = totalNumber(LOG) 
                     / totalRunTime(LOG) .
  )
  op committedNumber : Log -> Float .
  op $committedNumber : Log Float -> Float .

  eq committedNumber(LOG) = $committedNumber(LOG,0.0) .
  eq $committedNumber((TID |-> 
      < VT ; VT' ; true ; RS ; WS >,LOG),N) 
      = $committedNumber(LOG,N + 1.0) .
  eq $committedNumber((TID |-> 
      < VT ; VT' ; false ; RS ; WS >,LOG),N) 
      = $committedNumber(LOG,N) .
  eq $committedNumber(empty,N) = N .


  --- Avg latency
  op avgLatency : Log -> Float .
  eq avgLatency(LOG) = totalLatency(LOG) 
                     / committedNumber(LOG) .

  op totalLatency : Log -> Float .
  op $totalLatency : Log Float -> Float .
  
  eq totalLatency(LOG) = $totalLatency(LOG,0.0) .
  eq $totalLatency((TID |-> 
      < RID |-> GT ; (RID |-> GT',VT) ; true ; RS ; WS >,LOG),T) 
      = $totalLatency(LOG,T + GT' - GT) .
  eq $totalLatency((TID |-> 
      < VT ; VT' ; false ; RS ; WS >,LOG),T) 
      = $totalLatency(LOG,T) .
  eq $totalLatency(empty,T) = T .

  --- readAvgLatency : Log -> Float .
  op readAvgLatency : Log -> Float .
  --- includes "error" reads
  eq readAvgLatency(LOG) = readTotalLatency(LOG)
                         / readNumber(LOG) .

  op readTotalLatency : Log -> Float .
  op $readTotalLatency : Log Float -> Float .

  eq readTotalLatency(LOG) = $readTotalLatency(LOG,0.0) .
  eq $readTotalLatency((TID |-> 
      < RID |-> GT ; (RID |-> GT',VT) ; FLAG ; RS ; empty >,LOG),T) 
      = $readTotalLatency(LOG,T + GT' - GT) .
  eq $readTotalLatency((TID |-> 
      < RID |-> GT ; (RID |-> GT',VT) ; FLAG ; RS ; WS >,LOG),T)
      = $readTotalLatency(LOG,T) [owise] .
  eq $readTotalLatency(empty,T) = T .

  op readNumber : Log -> Float .
  op $readNumber : Log Float -> Float .
  eq readNumber(LOG) = $readNumber(LOG,0.0) .
  eq $readNumber((TID |-> < VT ; VT' ; FLAG ; RS ; empty >,LOG),N) 
     = $readNumber(LOG,N + 1.0) .
  eq $readNumber((TID |-> < VT ; VT' ; FLAG ; RS ; WS >,LOG),N) 
     = $readNumber(LOG,N) [owise] .
  eq $readNumber(empty,N) = N .  

  --- Commit ratio
  op cmtRatio : Log -> Float .
  eq cmtRatio(LOG) = committedNumber(LOG) 
                   / totalNumber(LOG) .

  op totalNumber : Log -> Float .
  op $totalNumber : Log Float -> Float .
  eq totalNumber(LOG) = $totalNumber(LOG,0.0) .
  eq $totalNumber((TID |-> < VT ; VT' ; FLAG ; RS ; WS >,LOG),N) 
     = $totalNumber(LOG,N + 1.0) .
  eq $totalNumber(empty,N) = N .  


  --- PVESTA interfaces
  eq val(0,< M : Monitor | log: LOG > C) = throughput(LOG) .
  eq val(1,< M : Monitor | log: LOG > C) = avgLatency(LOG) .
  eq val(2,< M : Monitor | log: LOG > C) = cmtRatio(LOG) .
  eq val(3,< M : Monitor | log: LOG > C) = readAvgLatency(LOG) .  
  eq val(4,< M : Monitor | log: LOG > C) = delta(LOG) .  
  eq val(5,< M : Monitor | log: LOG > C) = gamma(LOG) .  
  eq val(6,< M : Monitor | log: LOG > C) = common(LOG) .  
  eq val(7,< M : Monitor | log: LOG > C) = ryw(LOG) .  

---(
  eq initState = 
{0.0,start to 1 . 1} {0.0,start to 1 . 2} 
{0.0 |
nil} 
< 1 : Server | respFromRepl: empty,reqConsLv: emptyReqConsLv,datastore: ([k1,0,
    0.0], [k2,0,0.0], [k3,0,0.0]) > 
< 2 : Server | respFromRepl: empty,reqConsLv: emptyReqConsLv,datastore: ([k1,0,
    0.0], [k2,0,0.0], [k3,0,0.0]) > 
< 3 : Server | respFromRepl: empty,reqConsLv: emptyReqConsLv,datastore: ([k1,0,
    0.0], [k2,0,0.0], [k3,0,0.0]) > 
< 0 . 1 : Table | table: [replicatingSites(k1, 3 ;; 2 ;; 1) ;;
    replicatingSites(k2, 3 ;; 2 ;; 1) ;; replicatingSites(k3, 2 ;; 3 ;; 1)] > 
< 0 . 2 : Monitor | log: empty > 
< 1 . 1 : Client | requestQueue: 
< 1 . 1 : Txn | operations: read(k1),readSet: empty,writeSet: empty,version:
    0.0,consLv: 1 >,executing: null,committed: null,coord: 2 > 
< 1 . 2 : Client | requestQueue: 
< 2 . 1 : Txn | operations: write(k1, 964),readSet: empty,writeSet: empty,
    version: 0.0,consLv: 1 >,executing: null,committed: null,coord: 2 > .
)
endm

---set clear rules off .

---rew initConfig .

---(
rew delta( 

(1 . 1 |-> < 1 . 1 |-> 0.0 ; 1 . 1 |->
    6.0934828026287819 ; true ; < k3,3.4592121948135488 > ; empty >, 1 . 2 |->
    < 1 . 1 |-> 6.0934828026287819 ; 1 . 1 |-> 1.3670956626509819e+1 ; true ; <
    k2,5.6165743088981905 > ; empty >, 2 . 1 |-> < 1 . 2 |-> 0.0 ; 1 . 2 |->
    1.0555523271100917e+1 ; true ; empty ; < k3,0.0 > >, 2 . 2 |-> < 1 . 2 |->
    1.0555523271100917e+1 ; 1 . 2 |-> 1.4811057940921668e+1 ; true ; empty ; <
    k3,1.0555523271100917e+1 > >, 2 . 3 |-> < 1 . 2 |-> 1.4811057940921668e+1 ;
    1 . 2 |-> 1.7762242970124046e+1 ; true ; empty ; < k2,1.4811057940921668e+1
    > >, 2 . 4 |-> < 1 . 2 |-> 1.7762242970124046e+1 ; 1 . 2 |->
    3.5597988522714452e+1 ; true ; empty ; < k1,1.7762242970124046e+1 > >, 2 .
    5 |-> < 1 . 2 |-> 3.5597988522714452e+1 ; 1 . 2 |-> 3.8126558309993634e+1 ;
    true ; empty ; < k2,3.5597988522714452e+1 > >, 2 . 6 |-> < 1 . 2 |->
    3.8126558309993634e+1 ; 1 . 2 |-> 4.0578959251164079e+1 ; true ; empty ; <
    k2,3.8126558309993634e+1 > >, 2 . 7 |-> < 1 . 2 |-> 4.0578959251164079e+1 ;
    1 . 2 |-> 4.4257214675360473e+1 ; true ; < k3,1.0555523271100917e+1 > ;
    empty >, 2 . 8 |-> < 1 . 2 |-> 4.4257214675360473e+1 ; 1 . 2 |->
    4.9160518793946714e+1 ; true ; < k2,3.8126558309993634e+1 > ; empty >, 2 .
    9 |-> < 1 . 2 |-> 4.9160518793946714e+1 ; 1 . 2 |-> 5.2390262001487621e+1 ;
    true ; < k3,1.0555523271100917e+1 > ; empty >, 3 . 1 |-> < 1 . 3 |-> 0.0 ;
    1 . 3 |-> 2.9474108820872384 ; true ; < k1,0.0 > ; empty >, 4 . 1 |-> < 1 .
    4 |-> 0.0 ; 1 . 4 |-> 4.3599394231047128 ; true ; empty ; < k3,0.0 > >, 4 .
    2 |-> < 1 . 4 |-> 4.3599394231047128 ; 1 . 4 |-> 1.9112861719626171e+1 ;
    true ; < k1,2.5861828321940545 > ; empty >, 4 . 3 |-> < 1 . 4 |->
    1.9112861719626171e+1 ; 1 . 4 |-> 2.2793714841899362e+1 ; true ; empty ; <
    k2,1.9112861719626171e+1 > >, 4 . 4 |-> < 1 . 4 |-> 2.2793714841899362e+1 ;
    1 . 4 |-> 2.449467930952034e+1 ; true ; empty ; < k1,2.2793714841899362e+1
    > >, 5 . 1 |-> < 1 . 5 |-> 0.0 ; 1 . 5 |-> 2.5557714931500017 ; true ;
    empty ; < k2,0.0 > >, 5 . 2 |-> < 1 . 5 |-> 2.5557714931500017 ; 1 . 5 |->
    5.6165743088981905 ; true ; empty ; < k3,2.5557714931500017 > >, 5 . 3 |->
    < 1 . 5 |-> 5.6165743088981905 ; 1 . 5 |-> 9.6918305051546021 ; true ;
    empty ; < k2,5.6165743088981905 > >, 5 . 4 |-> < 1 . 5 |->
    9.6918305051546021 ; 1 . 5 |-> 1.3672049959005159e+1 ; true ; < k1,
    5.0346622425739644 > ; empty >, 5 . 5 |-> < 1 . 5 |-> 1.3672049959005159e+1
    ; 1 . 5 |-> 1.6432193918304801e+1 ; true ; < k3,1.0555523271100917e+1 > ;
    empty >, 6 . 1 |-> < 1 . 6 |-> 0.0 ; 1 . 6 |-> 2.5861828321940545 ; true ;
    < k3,0.0 > ; empty >, 6 . 2 |-> < 1 . 6 |-> 2.5861828321940545 ; 1 . 6 |->
    4.6710263713653539 ; true ; empty ; < k1,2.5861828321940545 > >, 6 . 3 |->
    < 1 . 6 |-> 4.6710263713653539 ; 1 . 6 |-> 7.2784732981040126 ; true ; <
    k1,2.5861828321940545 > ; empty >, 6 . 4 |-> < 1 . 6 |-> 7.2784732981040126
    ; 1 . 6 |-> 1.4791920236081614e+1 ; true ; empty ; < k1,7.2784732981040126
    > >, 7 . 1 |-> < 1 . 7 |-> 0.0 ; 1 . 7 |-> 3.4592121948135488 ; true ; <
    k1,0.0 > ; empty >, 7 . 2 |-> < 1 . 7 |-> 3.4592121948135488 ; 1 . 7 |->
    6.2143739416467181 ; true ; empty ; < k3,3.4592121948135488 > >, 7 . 3 |->
    < 1 . 7 |-> 6.2143739416467181 ; 1 . 7 |-> 1.6474831808328815e+1 ; true ; <
    k3,3.4592121948135488 > ; empty >, 7 . 4 |-> < 1 . 7 |->
    1.6474831808328815e+1 ; 1 . 7 |-> 1.9284917963212187e+1 ; true ; < k2,
    5.6165743088981905 > ; empty >, 8 . 1 |-> < 1 . 8 |-> 0.0 ; 1 . 8 |->
    2.5043402561593329 ; true ; < k3,0.0 > ; empty >, 8 . 2 |-> < 1 . 8 |->
    2.5043402561593329 ; 1 . 8 |-> 4.5487506066611454 ; true ; empty ; < k2,
    2.5043402561593329 > >, 9 . 1 |-> < 1 . 9 |-> 0.0 ; 1 . 9 |->
    2.1369276332298108 ; true ; empty ; < k1,0.0 > >, 9 . 2 |-> < 1 . 9 |->
    2.1369276332298108 ; 1 . 9 |-> 5.0346622425739644 ; true ; < k3,0.0 > ;
    empty >, 9 . 3 |-> < 1 . 9 |-> 5.0346622425739644 ; 1 . 9 |->
    6.8482125952073938 ; true ; empty ; < k1,5.0346622425739644 > >, 9 . 4 |->
    < 1 . 9 |-> 6.8482125952073938 ; 1 . 9 |-> 2.1331480648855386e+1 ; true ;
    empty ; < k3,6.8482125952073938 > >, 10 . 1 |-> < 1 . 10 |-> 0.0 ; 1 . 10
    |-> 3.6036412411730794 ; true ; < k3,0.0 > ; empty >, 10 . 2 |-> < 1 . 10
    |-> 3.6036412411730794 ; 1 . 10 |-> 6.1075923437242645 ; true ; < k2,
    2.5043402561593329 > ; empty >, 10 . 3 |-> < 1 . 10 |-> 6.1075923437242645
    ; 1 . 10 |-> 1.0737381005371056e+1 ; true ; empty ; < k3,6.1075923437242645
    > >, 10 . 4 |-> < 1 . 10 |-> 1.0737381005371056e+1 ; 1 . 10 |->
    1.3553412286996553e+1 ; true ; < k1,5.0346622425739644 > ; empty >, 10 . 5
    |-> < 1 . 10 |-> 1.3553412286996553e+1 ; 1 . 10 |-> 2.5238486097473711e+1 ;
    true ; < k1,7.2784732981040126 > ; empty >)
	
) .

rew gamma(
(1 . 1 |-> < 1 . 1 |-> 0.0 ; 1 . 1 |->
    3.3004082587532304 ; true ; < k3,0.0 > ; empty >, 1 . 2 |-> < 1 . 1 |->
    3.3004082587532304 ; 1 . 1 |-> 5.9246015278218405 ; true ; < k2,
    3.2281868176281154 > ; empty >, 1 . 3 |-> < 1 . 1 |-> 5.9246015278218405 ;
    1 . 1 |-> 9.2969235311814344 ; true ; empty ; < k1,5.9246015278218405 > >,
    1 . 4 |-> < 1 . 1 |-> 9.2969235311814344 ; 1 . 1 |-> 1.6392374368014828e+1
    ; true ; empty ; < k1,9.2969235311814344 > >, 1 . 5 |-> < 1 . 1 |->
    1.6392374368014828e+1 ; 1 . 1 |-> 1.8505023095324436e+1 ; true ; < k3,
    1.323608177785902e+1 > ; empty >, 1 . 6 |-> < 1 . 1 |->
    1.8505023095324436e+1 ; 1 . 1 |-> 3.1467941655532812e+1 ; true ; < k1,
    2.7433241789624194e+1 > ; empty >, 2 . 1 |-> < 1 . 2 |-> 0.0 ; 1 . 2 |->
    2.0142610080848544 ; true ; < k2,0.0 > ; empty >, 2 . 2 |-> < 1 . 2 |->
    2.0142610080848544 ; 1 . 2 |-> 6.4505218651866416 ; true ; < k3,0.0 > ;
    empty >, 2 . 3 |-> < 1 . 2 |-> 6.4505218651866416 ; 1 . 2 |->
    8.8601033971362337 ; true ; < k3,6.0234452082040839 > ; empty >, 3 . 1 |->
    < 1 . 3 |-> 0.0 ; 1 . 3 |-> 3.6833868541334791 ; true ; empty ; < k3,0.0 >
    >, 3 . 2 |-> < 1 . 3 |-> 3.6833868541334791 ; 1 . 3 |-> 6.3581788933694163
    ; true ; < k3,0.0 > ; empty >, 3 . 3 |-> < 1 . 3 |-> 6.3581788933694163 ; 1
    . 3 |-> 1.6326624907986321e+1 ; true ; empty ; < k1,6.3581788933694163 > >,
    3 . 4 |-> < 1 . 3 |-> 1.6326624907986321e+1 ; 1 . 3 |->
    2.2646856592153387e+1 ; true ; < k2,3.2281868176281154 > ; empty >, 3 . 5
    |-> < 1 . 3 |-> 2.2646856592153387e+1 ; 1 . 3 |-> 2.7433241789624194e+1 ;
    true ; empty ; < k3,2.2646856592153387e+1 > >, 3 . 6 |-> < 1 . 3 |->
    2.7433241789624194e+1 ; 1 . 3 |-> 3.0696065642868643e+1 ; true ; empty ; <
    k1,2.7433241789624194e+1 > >, 4 . 1 |-> < 1 . 4 |-> 0.0 ; 1 . 4 |->
    1.1219551445628646e+1 ; true ; empty ; < k2,0.0 > >, 4 . 2 |-> < 1 . 4 |->
    1.1219551445628646e+1 ; 1 . 4 |-> 1.4626287351651683e+1 ; true ; empty ; <
    k1,1.1219551445628646e+1 > >, 5 . 1 |-> < 1 . 5 |-> 0.0 ; 1 . 5 |->
    3.4075161119848323 ; true ; empty ; < k2,0.0 > >, 5 . 2 |-> < 1 . 5 |->
    3.4075161119848323 ; 1 . 5 |-> 7.6350458108858215 ; true ; < k2,0.0 > ;
    empty >, 5 . 3 |-> < 1 . 5 |-> 7.6350458108858215 ; 1 . 5 |->
    1.119209568980556e+1 ; true ; < k3,6.0234452082040839 > ; empty >, 6 . 1
    |-> < 1 . 6 |-> 0.0 ; 1 . 6 |-> 4.9977286380056878 ; true ; empty ; < k1,
    0.0 > >, 6 . 2 |-> < 1 . 6 |-> 4.9977286380056878 ; 1 . 6 |->
    1.695293326672833e+1 ; true ; empty ; < k1,4.9977286380056878 > >, 6 . 3
    |-> < 1 . 6 |-> 1.695293326672833e+1 ; 1 . 6 |-> 1.9890849457226963e+1 ;
    true ; < k1,1.6550765861711202e+1 > ; empty >, 6 . 4 |-> < 1 . 6 |->
    1.9890849457226963e+1 ; 1 . 6 |-> 2.7946333390075793e+1 ; true ; empty ; <
    k3,1.9890849457226963e+1 > >, 7 . 1 |-> < 1 . 7 |-> 0.0 ; 1 . 7 |->
    3.2281868176281154 ; true ; empty ; < k1,0.0 > >, 7 . 2 |-> < 1 . 7 |->
    3.2281868176281154 ; 1 . 7 |-> 6.0234452082040839 ; true ; empty ; < k2,
    3.2281868176281154 > >, 7 . 3 |-> < 1 . 7 |-> 6.0234452082040839 ; 1 . 7
    |-> 8.2530800078397704 ; true ; empty ; < k3,6.0234452082040839 > >, 7 . 4
    |-> < 1 . 7 |-> 8.2530800078397704 ; 1 . 7 |-> 1.323608177785902e+1 ; true
    ; < k2,3.2281868176281154 > ; empty >, 7 . 5 |-> < 1 . 7 |->
    1.323608177785902e+1 ; 1 . 7 |-> 1.6317280441539776e+1 ; true ; empty ; <
    k3,1.323608177785902e+1 > >, 7 . 6 |-> < 1 . 7 |-> 1.6317280441539776e+1 ;
    1 . 7 |-> 3.4220016597361756e+1 ; true ; empty ; < k1,1.6317280441539776e+1
    > >, 8 . 1 |-> < 1 . 8 |-> 0.0 ; 1 . 8 |-> 3.7636858476737594 ; true ; <
    k2,0.0 > ; empty >, 8 . 2 |-> < 1 . 8 |-> 3.7636858476737594 ; 1 . 8 |->
    7.9882213176646681 ; true ; < k2,3.2281868176281154 > ; empty >, 8 . 3 |->
    < 1 . 8 |-> 7.9882213176646681 ; 1 . 8 |-> 1.1973511178558192e+1 ; true ; <
    k2,3.2281868176281154 > ; empty >, 8 . 4 |-> < 1 . 8 |->
    1.1973511178558192e+1 ; 1 . 8 |-> 1.3781557318898722e+1 ; true ; < k3,
    6.0234452082040839 > ; empty >, 8 . 5 |-> < 1 . 8 |-> 1.3781557318898722e+1
    ; 1 . 8 |-> 1.6550765861711202e+1 ; true ; < k1,1.1219551445628646e+1 > ;
    empty >, 8 . 6 |-> < 1 . 8 |-> 1.6550765861711202e+1 ; 1 . 8 |->
    1.9023613656649331e+1 ; true ; empty ; < k1,1.6550765861711202e+1 > >, 10 .
    1 |-> < 1 . 10 |-> 0.0 ; 1 . 10 |-> 3.3263186074059168 ; true ; < k1,0.0 >
    ; empty >, 10 . 2 |-> < 1 . 10 |-> 3.3263186074059168 ; 1 . 10 |->
    7.0560987986918446 ; true ; < k2,3.2281868176281154 > ; empty >, 10 . 3 |->
    < 1 . 10 |-> 7.0560987986918446 ; 1 . 10 |-> 2.4997969594121187e+1 ; true ;
    empty ; < k1,7.0560987986918446 > >, 10 . 4 |-> < 1 . 10 |->
    2.4997969594121187e+1 ; 1 . 10 |-> 2.9968835531990578e+1 ; true ; empty ; <
    k2,2.4997969594121187e+1 > >)

) .

rew common(
(1 . 1 |-> < 1 . 1 |-> 0.0 ; 1 . 1 |->
    3.3004082587532304 ; true ; < k3,0.0 > ; empty >, 1 . 2 |-> < 1 . 1 |->
    3.3004082587532304 ; 1 . 1 |-> 5.9246015278218405 ; true ; < k2,
    3.2281868176281154 > ; empty >, 1 . 3 |-> < 1 . 1 |-> 5.9246015278218405 ;
    1 . 1 |-> 9.2969235311814344 ; true ; empty ; < k1,5.9246015278218405 > >,
    1 . 4 |-> < 1 . 1 |-> 9.2969235311814344 ; 1 . 1 |-> 1.6392374368014828e+1
    ; true ; empty ; < k1,9.2969235311814344 > >, 1 . 5 |-> < 1 . 1 |->
    1.6392374368014828e+1 ; 1 . 1 |-> 1.8505023095324436e+1 ; true ; < k3,
    1.323608177785902e+1 > ; empty >, 1 . 6 |-> < 1 . 1 |->
    1.8505023095324436e+1 ; 1 . 1 |-> 3.1467941655532812e+1 ; true ; < k1,
    2.7433241789624194e+1 > ; empty >, 2 . 1 |-> < 1 . 2 |-> 0.0 ; 1 . 2 |->
    2.0142610080848544 ; true ; < k2,0.0 > ; empty >, 2 . 2 |-> < 1 . 2 |->
    2.0142610080848544 ; 1 . 2 |-> 6.4505218651866416 ; true ; < k3,0.0 > ;
    empty >, 2 . 3 |-> < 1 . 2 |-> 6.4505218651866416 ; 1 . 2 |->
    8.8601033971362337 ; true ; < k3,6.0234452082040839 > ; empty >, 3 . 1 |->
    < 1 . 3 |-> 0.0 ; 1 . 3 |-> 3.6833868541334791 ; true ; empty ; < k3,0.0 >
    >, 3 . 2 |-> < 1 . 3 |-> 3.6833868541334791 ; 1 . 3 |-> 6.3581788933694163
    ; true ; < k3,0.0 > ; empty >, 3 . 3 |-> < 1 . 3 |-> 6.3581788933694163 ; 1
    . 3 |-> 1.6326624907986321e+1 ; true ; empty ; < k1,6.3581788933694163 > >,
    3 . 4 |-> < 1 . 3 |-> 1.6326624907986321e+1 ; 1 . 3 |->
    2.2646856592153387e+1 ; true ; < k2,3.2281868176281154 > ; empty >, 3 . 5
    |-> < 1 . 3 |-> 2.2646856592153387e+1 ; 1 . 3 |-> 2.7433241789624194e+1 ;
    true ; empty ; < k3,2.2646856592153387e+1 > >, 3 . 6 |-> < 1 . 3 |->
    2.7433241789624194e+1 ; 1 . 3 |-> 3.0696065642868643e+1 ; true ; empty ; <
    k1,2.7433241789624194e+1 > >, 4 . 1 |-> < 1 . 4 |-> 0.0 ; 1 . 4 |->
    1.1219551445628646e+1 ; true ; empty ; < k2,0.0 > >, 4 . 2 |-> < 1 . 4 |->
    1.1219551445628646e+1 ; 1 . 4 |-> 1.4626287351651683e+1 ; true ; empty ; <
    k1,1.1219551445628646e+1 > >, 5 . 1 |-> < 1 . 5 |-> 0.0 ; 1 . 5 |->
    3.4075161119848323 ; true ; empty ; < k2,0.0 > >, 5 . 2 |-> < 1 . 5 |->
    3.4075161119848323 ; 1 . 5 |-> 7.6350458108858215 ; true ; < k2,0.0 > ;
    empty >, 5 . 3 |-> < 1 . 5 |-> 7.6350458108858215 ; 1 . 5 |->
    1.119209568980556e+1 ; true ; < k3,6.0234452082040839 > ; empty >, 6 . 1
    |-> < 1 . 6 |-> 0.0 ; 1 . 6 |-> 4.9977286380056878 ; true ; empty ; < k1,
    0.0 > >, 6 . 2 |-> < 1 . 6 |-> 4.9977286380056878 ; 1 . 6 |->
    1.695293326672833e+1 ; true ; empty ; < k1,4.9977286380056878 > >, 6 . 3
    |-> < 1 . 6 |-> 1.695293326672833e+1 ; 1 . 6 |-> 1.9890849457226963e+1 ;
    true ; < k1,1.6550765861711202e+1 > ; empty >, 6 . 4 |-> < 1 . 6 |->
    1.9890849457226963e+1 ; 1 . 6 |-> 2.7946333390075793e+1 ; true ; empty ; <
    k3,1.9890849457226963e+1 > >, 7 . 1 |-> < 1 . 7 |-> 0.0 ; 1 . 7 |->
    3.2281868176281154 ; true ; empty ; < k1,0.0 > >, 7 . 2 |-> < 1 . 7 |->
    3.2281868176281154 ; 1 . 7 |-> 6.0234452082040839 ; true ; empty ; < k2,
    3.2281868176281154 > >, 7 . 3 |-> < 1 . 7 |-> 6.0234452082040839 ; 1 . 7
    |-> 8.2530800078397704 ; true ; empty ; < k3,6.0234452082040839 > >, 7 . 4
    |-> < 1 . 7 |-> 8.2530800078397704 ; 1 . 7 |-> 1.323608177785902e+1 ; true
    ; < k2,3.2281868176281154 > ; empty >, 7 . 5 |-> < 1 . 7 |->
    1.323608177785902e+1 ; 1 . 7 |-> 1.6317280441539776e+1 ; true ; empty ; <
    k3,1.323608177785902e+1 > >, 7 . 6 |-> < 1 . 7 |-> 1.6317280441539776e+1 ;
    1 . 7 |-> 3.4220016597361756e+1 ; true ; empty ; < k1,1.6317280441539776e+1
    > >, 8 . 1 |-> < 1 . 8 |-> 0.0 ; 1 . 8 |-> 3.7636858476737594 ; true ; <
    k2,0.0 > ; empty >, 8 . 2 |-> < 1 . 8 |-> 3.7636858476737594 ; 1 . 8 |->
    7.9882213176646681 ; true ; < k2,3.2281868176281154 > ; empty >, 8 . 3 |->
    < 1 . 8 |-> 7.9882213176646681 ; 1 . 8 |-> 1.1973511178558192e+1 ; true ; <
    k2,3.2281868176281154 > ; empty >, 8 . 4 |-> < 1 . 8 |->
    1.1973511178558192e+1 ; 1 . 8 |-> 1.3781557318898722e+1 ; true ; < k3,
    6.0234452082040839 > ; empty >, 8 . 5 |-> < 1 . 8 |-> 1.3781557318898722e+1
    ; 1 . 8 |-> 1.6550765861711202e+1 ; true ; < k1,1.1219551445628646e+1 > ;
    empty >, 8 . 6 |-> < 1 . 8 |-> 1.6550765861711202e+1 ; 1 . 8 |->
    1.9023613656649331e+1 ; true ; empty ; < k1,1.6550765861711202e+1 > >, 10 .
    1 |-> < 1 . 10 |-> 0.0 ; 1 . 10 |-> 3.3263186074059168 ; true ; < k1,0.0 >
    ; empty >, 10 . 2 |-> < 1 . 10 |-> 3.3263186074059168 ; 1 . 10 |->
    7.0560987986918446 ; true ; < k2,3.2281868176281154 > ; empty >, 10 . 3 |->
    < 1 . 10 |-> 7.0560987986918446 ; 1 . 10 |-> 2.4997969594121187e+1 ; true ;
    empty ; < k1,7.0560987986918446 > >, 10 . 4 |-> < 1 . 10 |->
    2.4997969594121187e+1 ; 1 . 10 |-> 2.9968835531990578e+1 ; true ; empty ; <
    k2,2.4997969594121187e+1 > >)

) .

rew ryw(
(1 . 1 |-> < 1 . 1 |-> 0.0 ; 1 . 1 |->
    3.3004082587532304 ; true ; < k3,0.0 > ; empty >, 1 . 2 |-> < 1 . 1 |->
    3.3004082587532304 ; 1 . 1 |-> 5.9246015278218405 ; true ; < k2,
    3.2281868176281154 > ; empty >, 1 . 3 |-> < 1 . 1 |-> 5.9246015278218405 ;
    1 . 1 |-> 9.2969235311814344 ; true ; empty ; < k1,5.9246015278218405 > >,
    1 . 4 |-> < 1 . 1 |-> 9.2969235311814344 ; 1 . 1 |-> 1.6392374368014828e+1
    ; true ; empty ; < k1,9.2969235311814344 > >, 1 . 5 |-> < 1 . 1 |->
    1.6392374368014828e+1 ; 1 . 1 |-> 1.8505023095324436e+1 ; true ; < k3,
    1.323608177785902e+1 > ; empty >, 1 . 6 |-> < 1 . 1 |->
    1.8505023095324436e+1 ; 1 . 1 |-> 3.1467941655532812e+1 ; true ; < k1,
    2.7433241789624194e+1 > ; empty >, 2 . 1 |-> < 1 . 2 |-> 0.0 ; 1 . 2 |->
    2.0142610080848544 ; true ; < k2,0.0 > ; empty >, 2 . 2 |-> < 1 . 2 |->
    2.0142610080848544 ; 1 . 2 |-> 6.4505218651866416 ; true ; < k3,0.0 > ;
    empty >, 2 . 3 |-> < 1 . 2 |-> 6.4505218651866416 ; 1 . 2 |->
    8.8601033971362337 ; true ; < k3,6.0234452082040839 > ; empty >, 3 . 1 |->
    < 1 . 3 |-> 0.0 ; 1 . 3 |-> 3.6833868541334791 ; true ; empty ; < k3,0.0 >
    >, 3 . 2 |-> < 1 . 3 |-> 3.6833868541334791 ; 1 . 3 |-> 6.3581788933694163
    ; true ; < k3,0.0 > ; empty >, 3 . 3 |-> < 1 . 3 |-> 6.3581788933694163 ; 1
    . 3 |-> 1.6326624907986321e+1 ; true ; empty ; < k1,6.3581788933694163 > >,
    3 . 4 |-> < 1 . 3 |-> 1.6326624907986321e+1 ; 1 . 3 |->
    2.2646856592153387e+1 ; true ; < k2,3.2281868176281154 > ; empty >, 3 . 5
    |-> < 1 . 3 |-> 2.2646856592153387e+1 ; 1 . 3 |-> 2.7433241789624194e+1 ;
    true ; empty ; < k3,2.2646856592153387e+1 > >, 3 . 6 |-> < 1 . 3 |->
    2.7433241789624194e+1 ; 1 . 3 |-> 3.0696065642868643e+1 ; true ; empty ; <
    k1,2.7433241789624194e+1 > >, 4 . 1 |-> < 1 . 4 |-> 0.0 ; 1 . 4 |->
    1.1219551445628646e+1 ; true ; empty ; < k2,0.0 > >, 4 . 2 |-> < 1 . 4 |->
    1.1219551445628646e+1 ; 1 . 4 |-> 1.4626287351651683e+1 ; true ; empty ; <
    k1,1.1219551445628646e+1 > >, 5 . 1 |-> < 1 . 5 |-> 0.0 ; 1 . 5 |->
    3.4075161119848323 ; true ; empty ; < k2,0.0 > >, 5 . 2 |-> < 1 . 5 |->
    3.4075161119848323 ; 1 . 5 |-> 7.6350458108858215 ; true ; < k2,0.0 > ;
    empty >, 5 . 3 |-> < 1 . 5 |-> 7.6350458108858215 ; 1 . 5 |->
    1.119209568980556e+1 ; true ; < k3,6.0234452082040839 > ; empty >, 6 . 1
    |-> < 1 . 6 |-> 0.0 ; 1 . 6 |-> 4.9977286380056878 ; true ; empty ; < k1,
    0.0 > >, 6 . 2 |-> < 1 . 6 |-> 4.9977286380056878 ; 1 . 6 |->
    1.695293326672833e+1 ; true ; empty ; < k1,4.9977286380056878 > >, 6 . 3
    |-> < 1 . 6 |-> 1.695293326672833e+1 ; 1 . 6 |-> 1.9890849457226963e+1 ;
    true ; < k1,1.6550765861711202e+1 > ; empty >, 6 . 4 |-> < 1 . 6 |->
    1.9890849457226963e+1 ; 1 . 6 |-> 2.7946333390075793e+1 ; true ; empty ; <
    k3,1.9890849457226963e+1 > >, 7 . 1 |-> < 1 . 7 |-> 0.0 ; 1 . 7 |->
    3.2281868176281154 ; true ; empty ; < k1,0.0 > >, 7 . 2 |-> < 1 . 7 |->
    3.2281868176281154 ; 1 . 7 |-> 6.0234452082040839 ; true ; empty ; < k2,
    3.2281868176281154 > >, 7 . 3 |-> < 1 . 7 |-> 6.0234452082040839 ; 1 . 7
    |-> 8.2530800078397704 ; true ; empty ; < k3,6.0234452082040839 > >, 7 . 4
    |-> < 1 . 7 |-> 8.2530800078397704 ; 1 . 7 |-> 1.323608177785902e+1 ; true
    ; < k2,3.2281868176281154 > ; empty >, 7 . 5 |-> < 1 . 7 |->
    1.323608177785902e+1 ; 1 . 7 |-> 1.6317280441539776e+1 ; true ; empty ; <
    k3,1.323608177785902e+1 > >, 7 . 6 |-> < 1 . 7 |-> 1.6317280441539776e+1 ;
    1 . 7 |-> 3.4220016597361756e+1 ; true ; empty ; < k1,1.6317280441539776e+1
    > >, 8 . 1 |-> < 1 . 8 |-> 0.0 ; 1 . 8 |-> 3.7636858476737594 ; true ; <
    k2,0.0 > ; empty >, 8 . 2 |-> < 1 . 8 |-> 3.7636858476737594 ; 1 . 8 |->
    7.9882213176646681 ; true ; < k2,3.2281868176281154 > ; empty >, 8 . 3 |->
    < 1 . 8 |-> 7.9882213176646681 ; 1 . 8 |-> 1.1973511178558192e+1 ; true ; <
    k2,3.2281868176281154 > ; empty >, 8 . 4 |-> < 1 . 8 |->
    1.1973511178558192e+1 ; 1 . 8 |-> 1.3781557318898722e+1 ; true ; < k3,
    6.0234452082040839 > ; empty >, 8 . 5 |-> < 1 . 8 |-> 1.3781557318898722e+1
    ; 1 . 8 |-> 1.6550765861711202e+1 ; true ; < k1,1.1219551445628646e+1 > ;
    empty >, 8 . 6 |-> < 1 . 8 |-> 1.6550765861711202e+1 ; 1 . 8 |->
    1.9023613656649331e+1 ; true ; empty ; < k1,1.6550765861711202e+1 > >, 10 .
    1 |-> < 1 . 10 |-> 0.0 ; 1 . 10 |-> 3.3263186074059168 ; true ; < k1,0.0 >
    ; empty >, 10 . 2 |-> < 1 . 10 |-> 3.3263186074059168 ; 1 . 10 |->
    7.0560987986918446 ; true ; < k2,3.2281868176281154 > ; empty >, 10 . 3 |->
    < 1 . 10 |-> 7.0560987986918446 ; 1 . 10 |-> 2.4997969594121187e+1 ; true ;
    empty ; < k1,7.0560987986918446 > >, 10 . 4 |-> < 1 . 10 |->
    2.4997969594121187e+1 ; 1 . 10 |-> 2.9968835531990578e+1 ; true ; empty ; <
    k2,2.4997969594121187e+1 > >)
) .

)